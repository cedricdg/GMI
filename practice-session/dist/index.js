'use strict';

var _draw = require('./lib/draw');

var draw = _interopRequireWildcard(_draw);

var _dataset = require('./lib/dataset');

var _dataset2 = _interopRequireDefault(_dataset);

var _recognizer = require('./lib/recognizer');

var _recognizer2 = _interopRequireDefault(_recognizer);

var _utils = require('./lib/utils');

var utils = _interopRequireWildcard(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var letsDraw = false;
var currentGesture = [];
var gestureID = 1;
var trainingMode = true;

var $drawing = document.querySelector('#drawCan');

var dataset = new _dataset2.default();
var myRecognizer = new _recognizer2.default();
if (typeof window.orientation !== 'undefined') {

  // start when mouse is down
  $drawing.addEventListener('touchstart', function (e) {
    e.preventDefault();
    console.log("touchstart");
    mouseDown(e);
  });
  // start when mouse is down
  $drawing.addEventListener('touchmove', function (e) {
    e.preventDefault();
    console.log("touchmove");
    mouseMove(e);
  });
  // start when mouse is down
  $drawing.addEventListener('touchend', function (e) {
    e.preventDefault();
    console.log("touchend");
    mouseUp(e);
  });
} else {
  // start when mouse is down
  $drawing.addEventListener('mousedown', function (e) {
    console.log("mousedown");
    mouseDown(e);
  });

  // start when mouse is down
  $drawing.addEventListener('mousemove', function (e) {
    console.log("mousemove");
    mouseMove(e);
  });

  // stop when mouse is up
  $drawing.addEventListener('mouseup', function (e) {
    console.log("mouseup");
    mouseUp(e);
  });
}

var mouseDown = function mouseDown(e) {
  draw.drawGesture($drawing, 'down', e);
  var coordinates = draw.getMouseXYinCanvas($drawing, e);
  currentGesture.push(coordinates);
  console.log(coordinates);
  letsDraw = true;
};

var mouseMove = function mouseMove(e) {
  if (letsDraw) {
    draw.drawGesture($drawing, 'move', e);
    var coordinates = draw.getMouseXYinCanvas($drawing, e);
    currentGesture.push(coordinates);
    //console.log(coordinates);
  }
};

var mouseUp = function mouseUp(e) {
  letsDraw = false;

  currentGesture = utils.scale(currentGesture);
  currentGesture = utils.translateToOrigin(currentGesture);
  // scale

  if (trainingMode) {
    dataset.addGestureWithLabel(currentGesture, gestureID);
    dataset.plotDatasetInHML();
    gestureID++;
  } else {
    var predictedLabel = myRecognizer.predict(currentGesture);
    console.log(predictedLabel);
  }

  currentGesture = [];
};

var $trainingButton = document.querySelector('#trainingButton');
$trainingButton.addEventListener('click', function (e) {
  trainingMode = true;
});

var $testingButton = document.querySelector('#testingButton');
$testingButton.addEventListener('click', function (e) {
  myRecognizer.fit(dataset);
  trainingMode = false;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRyYXciLCJ1dGlscyIsImxldHNEcmF3IiwiY3VycmVudEdlc3R1cmUiLCJnZXN0dXJlSUQiLCJ0cmFpbmluZ01vZGUiLCIkZHJhd2luZyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImRhdGFzZXQiLCJteVJlY29nbml6ZXIiLCJ3aW5kb3ciLCJvcmllbnRhdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJjb25zb2xlIiwibG9nIiwibW91c2VEb3duIiwibW91c2VNb3ZlIiwibW91c2VVcCIsImRyYXdHZXN0dXJlIiwiY29vcmRpbmF0ZXMiLCJnZXRNb3VzZVhZaW5DYW52YXMiLCJwdXNoIiwic2NhbGUiLCJ0cmFuc2xhdGVUb09yaWdpbiIsImFkZEdlc3R1cmVXaXRoTGFiZWwiLCJwbG90RGF0YXNldEluSE1MIiwicHJlZGljdGVkTGFiZWwiLCJwcmVkaWN0IiwiJHRyYWluaW5nQnV0dG9uIiwiJHRlc3RpbmdCdXR0b24iLCJmaXQiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0lBQVlBLEk7O0FBQ1o7Ozs7QUFDQTs7OztBQUNBOztJQUFZQyxLOzs7Ozs7QUFFWixJQUFJQyxXQUFXLEtBQWY7QUFDQSxJQUFJQyxpQkFBaUIsRUFBckI7QUFDQSxJQUFJQyxZQUFZLENBQWhCO0FBQ0EsSUFBSUMsZUFBZSxJQUFuQjs7QUFFQSxJQUFNQyxXQUFXQyxTQUFTQyxhQUFULENBQXVCLFVBQXZCLENBQWpCOztBQUVBLElBQUlDLFVBQVUsdUJBQWQ7QUFDQSxJQUFJQyxlQUFlLDBCQUFuQjtBQUNBLElBQUksT0FBT0MsT0FBT0MsV0FBZCxLQUE4QixXQUFsQyxFQUErQzs7QUFFN0M7QUFDQU4sV0FBU08sZ0JBQVQsQ0FBMEIsWUFBMUIsRUFBd0MsVUFBU0MsQ0FBVCxFQUFZO0FBQ2hEQSxNQUFFQyxjQUFGO0FBQ0FDLFlBQVFDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FDLGNBQVVKLENBQVY7QUFD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QSxDQUpEIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgKiBhcyBkcmF3IGZyb20gJy4vbGliL2RyYXcnXG5pbXBvcnQgRGF0YXNldCBmcm9tICcuL2xpYi9kYXRhc2V0J1xuaW1wb3J0IFJlY29nbml6ZXIgZnJvbSAnLi9saWIvcmVjb2duaXplcidcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4vbGliL3V0aWxzJ1xuXG5sZXQgbGV0c0RyYXcgPSBmYWxzZTtcbmxldCBjdXJyZW50R2VzdHVyZSA9IFtdO1xubGV0IGdlc3R1cmVJRCA9IDE7XG5sZXQgdHJhaW5pbmdNb2RlID0gdHJ1ZTtcblxuY29uc3QgJGRyYXdpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZHJhd0NhbicpO1xuXG5sZXQgZGF0YXNldCA9IG5ldyBEYXRhc2V0KCk7XG5sZXQgbXlSZWNvZ25pemVyID0gbmV3IFJlY29nbml6ZXIoKTtcbmlmICh0eXBlb2Ygd2luZG93Lm9yaWVudGF0aW9uICE9PSAndW5kZWZpbmVkJykge1xuXG4gIC8vIHN0YXJ0IHdoZW4gbW91c2UgaXMgZG93blxuICAkZHJhd2luZy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgZnVuY3Rpb24oZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICBcdGNvbnNvbGUubG9nKFwidG91Y2hzdGFydFwiKTtcbiAgICAgIG1vdXNlRG93bihlKTtcbiAgfSk7XG4gIC8vIHN0YXJ0IHdoZW4gbW91c2UgaXMgZG93blxuICAkZHJhd2luZy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgIFx0Y29uc29sZS5sb2coXCJ0b3VjaG1vdmVcIik7XG4gICAgICBtb3VzZU1vdmUoZSk7XG4gIH0pO1xuICAvLyBzdGFydCB3aGVuIG1vdXNlIGlzIGRvd25cbiAgJGRyYXdpbmcuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgIFx0Y29uc29sZS5sb2coXCJ0b3VjaGVuZFwiKTtcbiAgICAgIG1vdXNlVXAoZSk7XG4gIH0pO1xuXG59IGVsc2Uge1xuICAvLyBzdGFydCB3aGVuIG1vdXNlIGlzIGRvd25cbiAgJGRyYXdpbmcuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24oZSkge1xuICAgICBcdGNvbnNvbGUubG9nKFwibW91c2Vkb3duXCIpO1xuICAgICAgbW91c2VEb3duKGUpO1xuICB9KTtcblxuICAvLyBzdGFydCB3aGVuIG1vdXNlIGlzIGRvd25cbiAgJGRyYXdpbmcuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZnVuY3Rpb24oZSkge1xuICAgICBcdGNvbnNvbGUubG9nKFwibW91c2Vtb3ZlXCIpO1xuICAgICAgbW91c2VNb3ZlKGUpO1xuICB9KTtcblxuICAvLyBzdG9wIHdoZW4gbW91c2UgaXMgdXBcbiAgJGRyYXdpbmcuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgXHRjb25zb2xlLmxvZyhcIm1vdXNldXBcIik7XG4gICAgICBtb3VzZVVwKGUpO1xuICB9KTtcblxufVxuXG5jb25zdCBtb3VzZURvd24gPSBmdW5jdGlvbihlKSB7XG4gICBcdGRyYXcuZHJhd0dlc3R1cmUoJGRyYXdpbmcsICdkb3duJywgZSk7XG4gICBcdGNvbnN0IGNvb3JkaW5hdGVzID0gZHJhdy5nZXRNb3VzZVhZaW5DYW52YXMoJGRyYXdpbmcsIGUpO1xuICAgXHRjdXJyZW50R2VzdHVyZS5wdXNoKGNvb3JkaW5hdGVzKTtcbiAgICBjb25zb2xlLmxvZyhjb29yZGluYXRlcyk7XG4gICBcdGxldHNEcmF3ID0gdHJ1ZTtcbn07XG5cbmNvbnN0IG1vdXNlTW92ZSA9IGZ1bmN0aW9uKGUpIHtcblx0aWYgKGxldHNEcmF3KXtcblx0ICAgXHRkcmF3LmRyYXdHZXN0dXJlKCRkcmF3aW5nLCAnbW92ZScsIGUpO1xuXHQgICBcdGNvbnN0IGNvb3JkaW5hdGVzID0gZHJhdy5nZXRNb3VzZVhZaW5DYW52YXMoJGRyYXdpbmcsIGUpO1xuXHQgICBcdGN1cnJlbnRHZXN0dXJlLnB1c2goY29vcmRpbmF0ZXMpO1xuICAgXHRcdC8vY29uc29sZS5sb2coY29vcmRpbmF0ZXMpO1xuXHQgICB9XG59O1xuXG5jb25zdCBtb3VzZVVwID0gZnVuY3Rpb24oZSkge1xuICAgXHRsZXRzRHJhdyA9IGZhbHNlO1xuXG4gICAgY3VycmVudEdlc3R1cmUgPSB1dGlscy5zY2FsZShjdXJyZW50R2VzdHVyZSk7XG4gICAgY3VycmVudEdlc3R1cmUgPSB1dGlscy50cmFuc2xhdGVUb09yaWdpbihjdXJyZW50R2VzdHVyZSk7XG4gICAgLy8gc2NhbGVcblxuICAgIGlmKHRyYWluaW5nTW9kZSl7XG5cdFx0XHRkYXRhc2V0LmFkZEdlc3R1cmVXaXRoTGFiZWwoY3VycmVudEdlc3R1cmUsIGdlc3R1cmVJRCk7XG4gICBcdFx0ZGF0YXNldC5wbG90RGF0YXNldEluSE1MKCk7XG5cdFx0XHRnZXN0dXJlSUQrKztcblx0XHR9IGVsc2V7XG5cdFx0XHRjb25zdCBwcmVkaWN0ZWRMYWJlbCA9IG15UmVjb2duaXplci5wcmVkaWN0KGN1cnJlbnRHZXN0dXJlKTtcblx0XHRcdGNvbnNvbGUubG9nKHByZWRpY3RlZExhYmVsKTtcblx0XHR9XG5cblx0ICAgXHRjdXJyZW50R2VzdHVyZSA9IFtdO1xufTtcblxuY29uc3QgJHRyYWluaW5nQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RyYWluaW5nQnV0dG9uJyk7XG4kdHJhaW5pbmdCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XG5cdHRyYWluaW5nTW9kZSA9IHRydWU7XG59KTtcblxuY29uc3QgJHRlc3RpbmdCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGVzdGluZ0J1dHRvbicpO1xuJHRlc3RpbmdCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XG5cdG15UmVjb2duaXplci5maXQoZGF0YXNldCk7XG5cdHRyYWluaW5nTW9kZSA9IGZhbHNlO1xuXG59KTtcbiJdfQ==